# services:
#   app:
#     image: todo-frontend
#     build:
#       context: ./todo-frontend # The context will pick this directory as the "build context"
#       dockerfile: Dockerfile # This will simply tell which dockerfile to read
#     volumes:
#       - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
#     # ports:
#     #   - 3000:3000
#     environment:
#       - REACT_APP_BACKEND_URL=http://localhost:8080/api
#     container_name: todo-frontend # This will name the container hello-front-dev

#   mongo:
#     image: mongo
#     ports:
#       - 3456:27017
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#       MONGO_INITDB_DATABASE: the_database 
#     volumes:
#       - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
#       - ./todo-backend/mongo_data:/data/db

#   redis:
#     image: redis
#     ports:
#       - 6378:6379
#     command: ["redis-server", "--appendonly", "yes"]
#     volumes:
#       - ./todo-backend/redis_data:/data

#   server:
#     image: todo-backend
#     build:
#       context: ./todo-backend
#       dockerfile: Dockerfile
#     volumes:
#       - ./todo-backend/:/usr/src/app
#     # ports:
#     #   - 3001:3000
#     container_name: todo-backend
#     environment:
#       - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
#       - REDIS_URL=redis://redis:6379
#   debug-helper:
#     image: busybox

#   nginx:
#     image: nginx:1.20.1
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#     ports:
#       - 8080:80
#     container_name: reverse-proxy
#     depends_on:
#       - app
#       - server
#       # nginx container is not started until
#       # the frontend container is started

version: '3.8'

services:
    app:
      image: todo-frontend
      build:
        context: ./todo-frontend # The context will pick this directory as the "build context"
      volumes:
        - ./todo-frontend:/usr/src/app
      container_name: todo-frontend

    mongo:
      image: mongo
      ports:
        - 3456:27017
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example
        MONGO_INITDB_DATABASE: the_database
      volumes: 
        - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
        - mongo_data:/data/db
      container_name: mongo

    redis:
      image: redis
      ports:
        - 6379:6379
      command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
      volumes: # Declare the volume
        - ./todo-backend/redis_data:/data
      container_name: redis

    server:
      image: todo-backend
      build:
        context: ./todo-backend
      volumes:
        - ./todo-backend:/usr/src/app
      environment: 
        - REDIS_URL=redis://redis:6379
        - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      ports:
        - 3000:3000
      container_name: todo-backend
      depends_on:
        - mongo
        - redis

    nginx:
      image: nginx
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      ports:
        - 8080:80
      container_name: reverse-proxy
      depends_on:
        - app # wait for the frontend container to be started
        - server

volumes:
  mongo_data: